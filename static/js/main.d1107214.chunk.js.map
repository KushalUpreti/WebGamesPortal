{"version":3,"sources":["shared/Containers/Container.js","shared/UIElements/Form/Form.js","shared/Contexts/SearchContext.js","shared/UIElements/Input/Input.js","shared/UIElements/Search/Search.js","shared/UIElements/Dropdown/Dropdown.js","shared/UIElements/GameCard/GameCard.js","shared/Functions/FirebaseTest.js","shared/Functions/FirebaseCallbacks.js","shared/UIElements/Spinner/Spinner.js","shared/UIElements/DiscoverCards/DiscoverCard.js","pages/Containers/Homepage.js","shared/Contexts/AuthContext.js","shared/UIElements/Avatar/Avatar.js","shared/NavComponents/NavLinks.js","shared/NavComponents/Header.js","pages/Components/IFrame.js","pages/Containers/Gamepage.js","pages/Containers/CategoryPage.js","App.js","reportWebVitals.js","index.js"],"names":["Container","props","style","marginTop","className","children","Form","onSubmit","submit","SearchContext","createContext","value","searchItem","Input","search","useContext","id","type","placeholder","onChange","Search","name","Dropdown","change","GameCard","to","pathname","category","data","gameUrl","title","firebase","fireb","src","url","alt","dotenv","config","initializeApp","apiKey","authDomain","databaseURL","storageBucket","auth","googleProvider","GoogleAuthProvider","request_all","startAt","size","callback","database","ref","orderByKey","limitToFirst","once","then","request_category","toLowerCase","snapshot","forEach","childSnapshot","key","request_included_category_list","receive_data_all","newArray","newObject","gameId","val","imageUrl","push","categoryListCallback","Spinner","Fragment","DiscoverCard","useState","gamelist","dataLoaded","state","setState","useEffect","loadStuff","array","prevstate","map","item","withRouter","discoverList","searchKey","login","test","categoryList","categoryState","categoryFunction","loadAllCategory","discCard","discoverCardCallback","Provider","event","target","history","defaultValue","disabled","slice","AuthContext","loggedIn","signIn","signOut","Avatar","NavLinks","imgUrl","userName","userDetails","JSON","parse","localStorage","getItem","index","displayName","indexOf","photoURL","background","border","color","onClick","signInFunction","signInWithPopup","res","setItem","stringify","user","catch","error","console","log","message","Header","IFrame","path","loadingMore","lastIndex","gameLink","link","setLink","loadGames","params","URLSearchParams","location","get","paddingLeft","gameList","newLoaded","textTransform","App","logIn","useCallback","logOut","removeItem","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d1107214.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./Container.css\"\r\n\r\nconst Container = (props) => {\r\n    return (\r\n        <div style={{ marginTop: `${props.marginTop}` }} className=\"Container\">\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Container;","import React from 'react';\r\n\r\n\r\nconst Form = (props) => {\r\n    return (\r\n        <form onSubmit={props.submit}>\r\n            {props.children}\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Form;","import { createContext } from 'react';\r\n\r\nconst SearchContext = createContext({\r\n    value: \"\",\r\n    searchItem: () => { }\r\n});\r\n\r\nexport default SearchContext;","import React, { useContext } from 'react';\r\nimport './Input.css';\r\nimport SearchContext from '../../Contexts/SearchContext';\r\n\r\nconst Input = (props) => {\r\n    const search = useContext(SearchContext);\r\n    return (\r\n        //One way of doing it\r\n        // <SearchContext.Consumer>\r\n        //     {context => {\r\n        //         return <input className=\"Input\" id={props.id} type={props.type} placeholder={props.placeholder} onChange={context.searchItem} value={context.value || props.value} />\r\n        //     }}\r\n        // </SearchContext.Consumer>\r\n        <input className=\"Input\" id={props.id} type={props.type} placeholder={props.placeholder} onChange={search.searchItem} value={search.value || props.value} />\r\n    );\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\nimport From from '../Form/Form';\r\nimport Input from '../Input/Input';\r\n\r\nconst Search = (props) => {\r\n\r\n    return (\r\n        <From>\r\n            <Input type=\"text\" placeholder=\"Search..\" name=\"search\"></Input>\r\n        </From>\r\n    );\r\n}\r\n\r\nexport default Search;","import React from 'react';\r\nimport './Dropdown.css'\r\n\r\nconst Dropdown = (props) => {\r\n    return (\r\n        <select onChange={props.change} className=\"Dropdown\">\r\n            {props.children}\r\n\r\n        </select>\r\n    );\r\n}\r\n\r\nexport default Dropdown;","import React from 'react';\r\nimport './GameCard.css';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst GameCard = (props) => {\r\n    return (\r\n        <Link to={{\r\n            pathname: \"/game\",\r\n            search: `?id=${props.id}&category=${props.category}`,\r\n            data: props.gameUrl,\r\n            title: props.title,\r\n            firebase: props.fireb\r\n        }} >\r\n            <div className=\"GameCard\">\r\n                <img src={props.url} alt=\"Cover_image\"></img>\r\n                <h3>{props.title}</h3>\r\n            </div>\r\n        </Link>\r\n\r\n    );\r\n}\r\n\r\nexport default GameCard;","import dotenv from 'dotenv'\r\nimport firebase from 'firebase';\r\nimport \"firebase/auth\";\r\ndotenv.config()\r\n\r\nexport var config = {\r\n    apiKey: \"AIzaSyC1iIknhchQD0_l92tVQXI6wk1NMLc2VPE\",\r\n    authDomain: \"dif-instantgames.firebaseapp.com\",\r\n    databaseURL: \"https://dif-instantgames.firebaseio.com/\",\r\n    storageBucket: \"dif-instantgames.appspot.com\",\r\n};\r\n\r\nfirebase.initializeApp(config);\r\nexport default firebase;\r\n\r\nexport const auth = firebase.auth();\r\nconst googleProvider = new firebase.auth.GoogleAuthProvider()\r\nexport const signInWithGoogle = (signInFunction) => {\r\n    auth.signInWithPopup(googleProvider).then((res) => {\r\n        localStorage.setItem(\"userCred\", JSON.stringify(res.user));\r\n        signInFunction();\r\n\r\n    }).catch((error) => {\r\n        console.log(error.message)\r\n    })\r\n}\r\n// (i)\r\n// Request 'All' games\r\n// To start from top, use: startAt = \"<space>\"\r\nexport function request_all(startAt, size, callback) {\r\n\r\n    var database;\r\n    database = firebase.database().ref('/Game Collection/all');\r\n\r\n    database = database.orderByKey().startAt(startAt).limitToFirst(size);\r\n\r\n    database.once('value').then(callback);\r\n}\r\n\r\n\r\n// (ii)\r\n//Requesting games from category is 2 step process:\r\n//                          1) Get 'gameId's included in the category\r\n//                          2) Request the 'gameId' key from 'All' game list\r\nexport function request_category(category, startAt, size, callback) {\r\n    category = category.toLowerCase();\r\n\r\n    var database;\r\n    database = firebase.database().ref('/Game Collection/' + category);\r\n\r\n    database = database.orderByKey().startAt(startAt).limitToFirst(size);\r\n\r\n    database.once('value').then(function (snapshot) {\r\n\r\n        snapshot.forEach(function (childSnapshot) {\r\n            var gameId = childSnapshot.key;\r\n\r\n            //Start at 'gameId', stop at size 1\r\n            request_all(gameId, 1, callback);          // Using function (i) & passing 'callback' parameter\r\n        });\r\n    });\r\n}\r\n\r\n\r\n// (iii)\r\n//Search the database\r\nexport function search(keyword, size, callback) {\r\n    keyword = keyword.toLowerCase();\r\n\r\n    var database;\r\n    database = firebase.database().ref('/Game Collection/search index');\r\n\r\n    database = database.orderByValue().startAt(keyword).limitToFirst(size);\r\n\r\n    database.once('value').then(function (snapshot) {\r\n\r\n        snapshot.forEach(function (childSnapshot) {\r\n            var gameId = childSnapshot.key;\r\n\r\n            //Start at 'gameId', stop at size 1\r\n            request_all(gameId, 1, callback);         // Using function (i) & passing 'callback' parameter\r\n        });\r\n    });\r\n}\r\n\r\n// (iv)\r\n// Not all categories are shown in the UI. The database contains list of categories to be shown to users which are updated\r\n// periodically .\r\nexport function request_included_category_list(callback) {\r\n    var database;\r\n    database = firebase.database().ref('/Game Collection/Categories Included');\r\n    database.once('value').then(callback);\r\n}\r\n\r\n// (v)\r\n// Discover Cards\r\nexport function request_discover_cards(callback) {\r\n    var database;\r\n    database = firebase.database().ref('/Discover Cards');\r\n\r\n    database.once('value').then(callback);\r\n}\r\n\r\n// (vi)\r\n// Avatar Url\r\nexport function get_avatar_url(UID, callback) {\r\n    var database;\r\n    database = firebase.database().ref('/Users/' + UID);\r\n\r\n    database.once('value').then(function (snapshot) {\r\n        var avatarId = snapshot.val().avatarId;\r\n        firebase.database().ref('/Avatars/' + avatarId).once(\"value\").then(callback);\r\n    });\r\n}\r\n\r\n// (vii)\r\n// Favorites\r\nexport function get_favorites(UID, callback) {\r\n    var database;\r\n    database = firebase.database().ref('/Users/' + UID + \"/favorites\");\r\n\r\n    database.once('value').then(function (snapshot) {\r\n        snapshot.forEach(function (childSnapshot) {\r\n            var gameId = childSnapshot.key;\r\n\r\n            //Start at 'gameId', stop at size 1\r\n            request_all(gameId, 1, callback);          // Using function (i) & passing 'callback' parameter\r\n        });\r\n    });\r\n}\r\n\r\n// (viii)\r\n// Add to Favorites\r\nexport function add_to_favorites(UID, gameId, callback) {\r\n    var database;\r\n    database = firebase.database().ref('/Users/' + UID + \"/favorites/\" + gameId);\r\n    database.set(true, callback);       //Setting true to add\r\n}\r\n\r\n// (ix)\r\n// Remove from favorites\r\nexport function remove_from_favorites(UID, gameId, callback) {\r\n    var database;\r\n    database = firebase.database().ref('/Users/' + UID + \"/favorites/\" + gameId);\r\n    database.set(null, callback);       //Setting null to remove\r\n}","export const receive_data_all = (snapshot) => {\r\n    let newArray = [];\r\n    snapshot.forEach(function (childSnapshot) {\r\n        var gameId = childSnapshot.key;\r\n        var name = (childSnapshot.val().name);\r\n        var url = (childSnapshot.val().url);\r\n        var imageUrl = (childSnapshot.val().imageUrl);\r\n        var category = (childSnapshot.val().category);\r\n\r\n        var newObject = {\r\n            gameId,\r\n            name,\r\n            url,\r\n            imageUrl,\r\n            category\r\n        }\r\n        newArray.push(newObject);\r\n    });\r\n    return newArray;\r\n}\r\n\r\nexport const discoverCardCallback = (snapshot) => {\r\n\r\n    // List with inluded categories: snapshot\r\n    const newArray = [];\r\n    // Get values like\r\n    snapshot.forEach(function (childSnapshot) {\r\n        var title = childSnapshot.val().title;\r\n        var category = childSnapshot.val().category;\r\n\r\n        const discCard = {\r\n            title,\r\n            category\r\n        }\r\n        newArray.push(discCard);\r\n        // Now load the games from the category: request_category(category, START_AT, SIZE)\r\n    });\r\n    return newArray;\r\n}\r\n\r\nexport const categoryListCallback = (snapshot) => {\r\n    let newArray = [];\r\n    // List with inluded categories: snapshot\r\n\r\n    // Get values like\r\n    snapshot.forEach(function (childSnapshot) {\r\n        var category = childSnapshot.val();\r\n        newArray.push(category);\r\n    });\r\n    return newArray;\r\n}","import React from 'react';\r\nimport './Spinner.css'\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"loader\">\r\n                <div className=\"face\">\r\n                    <div className=\"circle\"></div>\r\n                </div>\r\n                <div className=\"face\">\r\n                    <div className=\"circle\"></div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\nexport default Spinner;","import React, { useState, useEffect } from 'react';\r\nimport Container from '../../Containers/Container';\r\nimport GameCard from '../GameCard/GameCard';\r\nimport { request_category } from '../../Functions/FirebaseTest';\r\nimport { receive_data_all } from '../../Functions/FirebaseCallbacks';\r\nimport Spinner from '../Spinner/Spinner';\r\nimport { NavLink } from 'react-router-dom'\r\nimport './DiscoverCard.css'\r\n\r\nconst DiscoverCard = (props) => {\r\n\r\n    const [state, setState] = useState({\r\n        gamelist: [],\r\n        dataLoaded: false\r\n    });\r\n\r\n    useEffect(() => {\r\n        loadStuff();\r\n    }, []);\r\n\r\n    const loadStuff = () => {\r\n\r\n        request_category(props.category, \" \", 6, (snapshot) => {\r\n            const array = receive_data_all(snapshot);\r\n            setState(prevstate => {\r\n                const newState = {\r\n                    ...state,\r\n                    gamelist: [...prevstate.gamelist, ...array],\r\n                    dataLoaded: true\r\n                }\r\n                return newState;\r\n            })\r\n        })\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div>\r\n                <Container>\r\n                    <h2 >\r\n                        {props.title}\r\n                    </h2>\r\n                    <NavLink to={{\r\n                        pathname: \"/category\",\r\n                        search: `&category=${props.category}`,\r\n                    }}>\r\n                        More\r\n                    </NavLink>\r\n                </Container>\r\n                <Container\r\n                    marginTop=\"10px\">\r\n                    {state.dataLoaded ? state.gamelist.map(item => {\r\n                        return <GameCard\r\n                            key={item.gameId}\r\n                            url={item.imageUrl}\r\n                            gameUrl={item.url}\r\n                            title={item.name}\r\n                            id={item.gameId}\r\n                            category={item.category}\r\n                        ></GameCard>\r\n                    }) : <Spinner />}\r\n                </Container>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\nexport default DiscoverCard;","import React, { useState, useEffect } from 'react';\r\nimport Container from '../../shared/Containers/Container';\r\nimport Search from '../../shared/UIElements/Search/Search';\r\nimport Dropdown from '../../shared/UIElements/Dropdown/Dropdown';\r\nimport SearchContext from '../../shared/Contexts/SearchContext';\r\nimport DiscoverCard from '../../shared/UIElements/DiscoverCards/DiscoverCard';\r\nimport Spinner from '../../shared/UIElements/Spinner/Spinner';\r\nimport { search, request_included_category_list, request_discover_cards } from '../../shared/Functions/FirebaseTest';\r\nimport { categoryListCallback, discoverCardCallback } from '../../shared/Functions/FirebaseCallbacks';\r\nimport { withRouter } from 'react-router';\r\n\r\nconst Homepage = (props) => {\r\n\r\n    const [state, setState] = useState({\r\n        discoverList: [],\r\n        searchKey: \"\",\r\n        dataLoaded: false,\r\n        login: false,\r\n        test: false\r\n    });\r\n\r\n    const [categoryState, categoryFunction] = useState({\r\n        categoryList: [],\r\n    });\r\n\r\n    useEffect(() => {\r\n        loadAllCategory();\r\n    }, []);\r\n\r\n    // const searchHandler = (event) => {\r\n    //     if (event.target.value.length > 0) {\r\n    //         search(event.target.value);\r\n    //     } else {\r\n    //         request_all(\" \", state.itemCount);\r\n    //     }\r\n    // }\r\n\r\n    const loadAllCategory = () => {\r\n        request_included_category_list((snapshot) => {\r\n            const array = categoryListCallback(snapshot);\r\n            categoryFunction({\r\n                categoryList: [...array]\r\n            })\r\n        })\r\n        request_discover_cards((snapshot) => {\r\n            const array = discoverCardCallback(snapshot);\r\n            setState({\r\n                ...state,\r\n                discoverList: [...array],\r\n                dataLoaded: true\r\n            })\r\n        })\r\n    }\r\n\r\n    const changeHandler = (event) => {\r\n        const value = event.target.value;\r\n        props.history.push({\r\n            pathname: \"/category\",\r\n            search: `&category=${value}`,\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n                <SearchContext.Provider value={{\r\n                    value: state.searchKey,\r\n                    // searchItem: searchHandler\r\n                }}>\r\n                    <Search />\r\n                </SearchContext.Provider>\r\n\r\n                <Dropdown change={changeHandler}>\r\n                    <option value=\"\" defaultValue=\"selected\" disabled=\"disabled\">Genre</option>\r\n                    {categoryState.categoryList.map(item => {\r\n                        return <option key={item} value={item}>{item}</option>\r\n                    })}\r\n\r\n                </Dropdown>\r\n            </Container>\r\n\r\n            {\r\n                state.dataLoaded ? state.discoverList.map(item => {\r\n                    const id = item.title.slice(0, 15);\r\n                    return <DiscoverCard\r\n                        key={id}\r\n                        category={item.category}\r\n                        title={item.title}\r\n                    ></DiscoverCard>\r\n                }) : <Spinner />\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default withRouter(Homepage);","import { createContext } from 'react';\r\n\r\nconst AuthContext = createContext({\r\n    loggedIn: false,\r\n    signIn: () => { },\r\n    signOut: () => { }\r\n});\r\n\r\nexport default AuthContext;\r\n\r\n","import './Avatar.css';\r\n\r\nconst Avatar = (props) => {\r\n    return (\r\n        <div className=\"Avatar\">\r\n            <img className=\"img-small\" src={props.imageUrl} alt=\"dp\"></img>\r\n            <h3 className=\"name\">{props.name}</h3>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Avatar;","import React, { useContext } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport \"./Navlinks.css\";\r\nimport { signInWithGoogle } from '../../shared/Functions/FirebaseTest';\r\nimport AuthContext from '../Contexts/AuthContext';\r\nimport Avatar from '../UIElements/Avatar/Avatar';\r\n\r\nconst NavLinks = (props) => {\r\n    const auth = useContext(AuthContext);\r\n    let imgUrl = \"\";\r\n    let userName = \"\";\r\n    if (auth.loggedIn) {\r\n        let userDetails = JSON.parse(localStorage.getItem(\"userCred\"));\r\n        userName = userDetails.displayName;\r\n        const index = userName.indexOf(\" \");\r\n        if (index !== -1 && index < 8) {\r\n            userName = userName.slice(0, index);\r\n        } else {\r\n            userName = userName.slice(0, 8);\r\n            userName = userName + \"...\";\r\n        }\r\n        imgUrl = userDetails.photoURL;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ul className=\"NavLinks\">\r\n                {\r\n                    auth.loggedIn ? <li>\r\n                        <NavLink style={{\r\n                            background: \"none\",\r\n                            border: \"none\",\r\n                            color: \"white\",\r\n                        }} to=\"/user\">\r\n                            <Avatar imageUrl={imgUrl} name={userName} />\r\n                        </NavLink>\r\n                    </li> : null\r\n                }\r\n\r\n                <li>\r\n                    <NavLink to=\"/about\" >ABOUT US</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/contact\">CONTACT US</NavLink>\r\n                </li>\r\n                {\r\n                    auth.loggedIn ?\r\n                        <button onClick={() => {\r\n                            auth.signOut();\r\n                        }}>LOG OUT\r\n                            </button> :\r\n                        <li>\r\n                            <button onClick={() => {\r\n                                signInWithGoogle(auth.signIn);\r\n                            }} >LOG IN</button>\r\n                        </li>\r\n                }\r\n\r\n            </ul>\r\n        </>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default NavLinks;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Header.css';\r\nimport Navlinks from './NavLinks';\r\n\r\nconst Header = (props) => {\r\n    // <b style=\"color:#d32f2f; margin-left:-10px;\">Beta</b>\r\n    return <header className=\"MainHeader\">\r\n        <h1 className=\"main-navigation__title\">\r\n            <Link to=\"/\">Web Games Portal</Link>\r\n        </h1>\r\n\r\n        <Navlinks />\r\n    </header>\r\n}\r\n\r\nexport default Header;","import './IFrame.css'\r\n\r\nconst IFrame = (props) => {\r\n    return (\r\n        <iframe className=\"IFrame\" title=\"gamespace\" src={props.path}>\r\n\r\n        </iframe>\r\n    )\r\n}\r\n\r\nexport default IFrame;","import React, { useState, useEffect } from 'react';\r\nimport Container from '../../shared/Containers/Container';\r\nimport IFrame from '../../pages/Components/IFrame';\r\nimport { withRouter } from 'react-router';\r\nimport Spinner from '../../shared/UIElements/Spinner/Spinner';\r\nimport { request_category, request_all } from '../../shared/Functions/FirebaseTest';\r\nimport { receive_data_all } from '../../shared/Functions/FirebaseCallbacks';\r\nimport GameCard from '../../shared/UIElements/GameCard/GameCard.js';\r\n\r\n\r\nconst Gamepage = (props) => {\r\n\r\n    const [state, setState] = useState({\r\n        gamelist: [],\r\n        dataLoaded: false,\r\n        loadingMore: false,\r\n        lastIndex: \" \"\r\n    });\r\n\r\n    const [link, setLink] = useState({\r\n        title: \"\",\r\n        gameLink: \"\",\r\n    })\r\n\r\n    useEffect(() => {\r\n        loadGames();\r\n        // document.addEventListener('scroll', addScroll(category,state.lastIndex,setState,state));\r\n    }, []);\r\n\r\n    const loadGames = () => {\r\n\r\n        const params = new URLSearchParams(props.location.search);\r\n        let category = params.get(\"category\");\r\n        let id = params.get(\"id\");\r\n\r\n        const index = category.indexOf(\",\");\r\n        if (index !== -1) {\r\n            category = category.slice(0, index);\r\n        }\r\n\r\n        request_all(id, 1, (snapshot) => {\r\n            let array = receive_data_all(snapshot);\r\n            setLink({\r\n                ...link,\r\n                title: array[0].name,\r\n                gameLink: array[0].url\r\n            })\r\n        })\r\n\r\n        request_category(category, \" \", 24, (snapshot) => {\r\n            const array = receive_data_all(snapshot);\r\n            setState(prevstate => {\r\n                const newState = {\r\n                    ...state,\r\n                    gamelist: [...prevstate.gamelist, ...array],\r\n                    dataLoaded: true\r\n                }\r\n                return newState;\r\n            })\r\n        })\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1 style={{ color: \"white\", paddingLeft: \"10%\" }}>{link.title}</h1>\r\n            <Container marginTop={0}>\r\n                <IFrame path={link.gameLink}>\r\n\r\n                </IFrame>\r\n            </Container>\r\n            <h1 style={{ color: \"white\", paddingLeft: \"10%\", marginTop: \"50px\" }}>Similar games</h1>\r\n            <Container marginTop=\"10px\">\r\n                {\r\n                    state.dataLoaded ? state.gamelist.map(item => {\r\n                        return <GameCard\r\n                            key={item.gameId}\r\n                            url={item.imageUrl}\r\n                            gameUrl={item.url}\r\n                            title={item.name}\r\n                            id={item.gameId}\r\n                            category={item.category}\r\n                        ></GameCard>\r\n                    }) : <Spinner />\r\n                }\r\n                {state.loadingMore ? <Spinner /> : null}\r\n            </Container>\r\n        </>)\r\n}\r\n\r\nexport default withRouter(Gamepage);","import React, { useState, useEffect } from 'react';\r\nimport Container from '../../shared/Containers/Container';\r\nimport Search from '../../shared/UIElements/Search/Search';\r\nimport Dropdown from '../../shared/UIElements/Dropdown/Dropdown';\r\nimport SearchContext from '../../shared/Contexts/SearchContext';\r\nimport GameCard from '../../shared/UIElements/GameCard/GameCard';\r\nimport Spinner from '../../shared/UIElements/Spinner/Spinner';\r\nimport { request_category, request_included_category_list } from '../../shared/Functions/FirebaseTest';\r\nimport { receive_data_all, categoryListCallback } from '../../shared/Functions/FirebaseCallbacks';\r\nimport { withRouter } from 'react-router';\r\n\r\nconst CategoryPage = (props) => {\r\n\r\n    const params = new URLSearchParams(props.location.search);\r\n    let category = params.get(\"category\");\r\n\r\n    const [state, setState] = useState({\r\n        gameList: [],\r\n        searchKey: \"\",\r\n        dataLoaded: false,\r\n        newLoaded: true\r\n    });\r\n\r\n    const [categoryState, categoryFunction] = useState({\r\n        categoryList: [],\r\n    });\r\n\r\n    useEffect(() => {\r\n        loadStuff();\r\n    }, []);\r\n\r\n    const loadStuff = () => {\r\n        request_included_category_list((snapshot) => {\r\n            const array = categoryListCallback(snapshot);\r\n            categoryFunction({\r\n                categoryList: [...array]\r\n            })\r\n        })\r\n\r\n        request_category(category, \" \", 24, (snapshot) => {\r\n            const array = receive_data_all(snapshot);\r\n            setState(prevstate => {\r\n                const newState = {\r\n                    ...state,\r\n                    gameList: [...prevstate.gameList, ...array],\r\n                    dataLoaded: true\r\n                }\r\n                return newState;\r\n            })\r\n        })\r\n    }\r\n\r\n    // const searchHandler = (event) => {\r\n    //     if (event.target.value.length > 0) {\r\n    //          search(event.target.value, 12, setState, state);\r\n\r\n    //     } else {\r\n    //         request_all(\" \", state.itemCount);\r\n    //     }\r\n    // }\r\n\r\n    const changeHandler = (event) => {\r\n        const value = event.target.value;\r\n        props.history.push({\r\n            pathname: \"/category\",\r\n            search: `&category=${value}`\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n                <SearchContext.Provider value={{\r\n                    value: state.searchKey,\r\n                    // searchItem: searchHandler\r\n                }}>\r\n                    <Search />\r\n                </SearchContext.Provider>\r\n\r\n                <Dropdown change={changeHandler}>\r\n                    <option value=\"\" defaultValue=\"selected\" disabled=\"disabled\">Genre</option>\r\n                    {categoryState.categoryList.map(item => {\r\n                        return <option key={item} value={item}>{item}</option>\r\n                    })}\r\n                </Dropdown>\r\n            </Container>\r\n\r\n            <h1 style={{ color: \"white\", paddingLeft: \"10%\", marginTop: \"40px\", textTransform: \"capitalize\" }}>{category}</h1>\r\n\r\n            <Container marginTop=\"15px\">\r\n\r\n                {\r\n                    state.dataLoaded ? state.gameList.map(item => {\r\n                        return <GameCard\r\n                            key={item.gameId}\r\n                            url={item.imageUrl}\r\n                            gameUrl={item.url}\r\n                            title={item.name}\r\n                            id={item.gameId}\r\n                            category={item.category}\r\n                        ></GameCard>\r\n                    }) : <Spinner />\r\n                }\r\n                {state.newLoaded ? null : <Spinner />}\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default withRouter(CategoryPage);","import React, { useState, useCallback, useEffect } from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport './App.css';\nimport Homepage from './pages/Containers/Homepage';\nimport Header from './shared/NavComponents/Header';\nimport Gamepage from './pages/Containers/Gamepage';\nimport CategoryPage from './pages/Containers/CategoryPage';\nimport AuthContext from './shared/Contexts/AuthContext';\n\n\nfunction App() {\n\n  const [state, setState] = useState({\n    loggedIn: false\n  });\n\n  useEffect(() => {\n    if (localStorage.getItem(\"userCred\") !== null) {\n      setState({\n        loggedIn: true\n      });\n    }\n  }, []);\n\n  const logIn = useCallback(() => {\n    setState({\n      loggedIn: true\n    });\n    console.log(\"Signed in\");\n  }, []);\n\n  const logOut = useCallback(() => {\n    localStorage.removeItem(\"userCred\");\n    console.log(\"Signed in\");\n    setState({\n      loggedIn: false\n    })\n  }, []);\n\n  return (\n    <BrowserRouter>\n\n      <AuthContext.Provider value={{\n        loggedIn: state.loggedIn,\n        signIn: logIn,\n        signOut: logOut\n      }}>\n\n        <div className=\"App\">\n          <Header />\n          <Switch>\n\n            <Route path=\"/\" exact>\n              <Homepage />\n            </Route>\n\n            <Route path=\"/game\">\n              <Gamepage />\n            </Route>\n\n            <Route path=\"/category\">\n              <CategoryPage />\n            </Route>\n\n            <Redirect to=\"/\"></Redirect>\n          </Switch>\n        </div>\n      </AuthContext.Provider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}